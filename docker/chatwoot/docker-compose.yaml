x-chatwoot-common: &chatwoot-common
  image: chatwoot/chatwoot:v3.8.0
  restart: always
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
  env_file: .env
  volumes:
    - storage_data:/app/storage

services:
  rails:
    <<: *chatwoot-common
    container_name: chatwoot_rails
    ports:
      - '4005:3000'
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    networks:
      - chatwoot-net
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    <<: *chatwoot-common
    container_name: chatwoot_sidekiq
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production
      - INSTALLATION_ENV=docker
    networks:
      - chatwoot-net
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    container_name: chatwoot_postgres
    image: pgvector/pgvector:pg16
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot_production
      - POSTGRES_USER=postgres
      # Please provide your own password.
      - POSTGRES_PASSWORD=passsec
    networks:
      - chatwoot-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: chatwoot_redis
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env
    volumes:
      - redis_data:/data
    networks:
      - chatwoot-net
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s

volumes:
  storage_data:
  postgres_data:
  redis_data:

networks:
  chatwoot-net:
    name: chatwoot-net
    driver: bridge